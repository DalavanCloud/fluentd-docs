# forward Output Plugin

The `out_forward` Buffered Output plugin forwards events to other fluentd nodes. This plugin supports load-balancing and automatic fail-over (a.k.a. active-active backup). For replication, please use the [out_copy](out_copy) plugin.

The `out_forward` plugin detects server faults using a “φ accrual failure detector” algorithm. You can customize the parameters of the algorithm. When a server fault recovers, the plugin makes the server available automatically after a few seconds.

The `out_forward` plugin supports at-most-once and at-least-once semantics. The default is at-most-once.

## Example Configuration

`out_forward` is included in Fluentd's core. No additional installation process is required.

    :::text
    <match pattern>
      @type forward
      send_timeout 60s
      recover_wait 10s
      heartbeat_interval 1s
      phi_threshold 16
      hard_timeout 60s
      
      <server>
        name myserver1
        host 192.168.1.3
        port 24224
        weight 60
      </server>
      <server>
        name myserver2
        host 192.168.1.4
        port 24224
        weight 60
      </server>
      ...
      
      <secondary>
        @type file
        path /var/log/fluent/forward-failed
      </secondary>
    </match>

NOTE: Please see the LINK:[Config File](config-file) article for the basic structure and syntax of the configuration file.

## Supported modes

* Synchronous
* Asynchronous

See [Output Plugin Overview](output-plugin-overview) for more details.

## Plugin helpers

* [socket](api-plugin-helper-socket)
* [server](api-plugin-helper-server)
* [timer](api-plugin-helper-timer)
* [thread](api-plugin-helper-thread)
* [compat_parameters](api-plugin-helper-compat_parameters)

## Parameters

[Common Parameters](plugin-common-parameters)

### @type

The value must be `forward`.

### &lt;server&gt; (at least one is required)

| required | multi | version |
|:--------:|:-----:|:-------:|
| true     | true  | 0.14.5  |

The destination servers. Each server must have following information.

#### host

| type   | default            | version |
|:------:|:------------------:|:-------:|
| string | required parameter | 0.14.5  |

The IP address or host name of the server.

#### name

| type   | default | version |
|:------:|:-------:|:-------:|
| string | nil     | 0.14.5  |

The name of the server. Used for logging and certificate verification in TLS transport (when host is address).

#### port

| type    | default | version |
|:-------:|:-------:|:-------:|
| integer | 24224   | 0.14.5  |

The port number of the host. Note that both TCP packets (event stream) and UDP packets (heartbeat message) are sent to this port.

#### shared_key

| type   | default | version |
|:------:|:-------:|:-------:|
| string | nil     | 0.14.5  |

The shared key per server.

#### username

| type   | default           | version |
|:------:|:-----------------:|:-------:|
| string | "" (empty string) | 0.14.5  |

The username for authentication.

#### password

| type   | default           | version |
|:------:|:-----------------:|:-------:|
| string | "" (empty string) | 0.14.5  |

The password for authentication.

#### standby

| type | default | version |
|:----:|:-------:|:-------:|
| bool | false   | 0.14.5  |

Marks a node as the standby node for an Active-Standby model between Fluentd nodes. When an active node goes down, the standby node is promoted to an active node. The standby node is not used by the `out_forward` plugin until then.

    :::text
    <match pattern>
      @type forward
      ...
      
      <server>
        name myserver1
        host 192.168.1.3
        weight 60
      </server>
      <server>  # forward doesn't use myserver2 until myserver1 goes down
        name myserver2
        host 192.168.1.4
        weight 60
        standby
      </server>
      ...
    </match>

#### weight

| type    | default | version |
|:-------:|:-------:|:-------:|
| integer | 60      | 0.14.5  |

The load balancing weight. If the weight of one server is 20 and the weight of the other server is 30, events are sent in a 2:3 ratio. The default weight is 60.

### require_ack_response

| type | default | version |
|:----:|:-------:|:-------:|
| bool | false   | 0.14.0  |

Change the protocol to at-least-once. The plugin waits the ack from destination's in_forward plugin.

### ack_response_timeout

| type | default | version |
|:----:|:-------:|:-------:|
| time | 190     | 0.14.0  |

This option is used when `require_ack_response` is `true`. This default value is based on popular `tcp_syn_retries`.

If set `0`, this plugin doesn't wait the ack response.

### send_timeout

| type | default | version |
|:----:|:-------:|:-------:|
| time | 60      | 0.14.0  |

The timeout time when sending event logs.

### recover_wait

| type | default | version |
|:----:|:-------:|:-------:|
| time | 10      | 0.14.0  |

The wait time before accepting a server fault recovery.

### heartbeat_type

| type | default   | available                 | version |
|:----:|:---------:|:-------------------------:|:-------:|
| enum | transport | transport, tcp, udp, none | 0.14.12 |

The transport protocol to use for heartbeats. Set "none" to disable heartbeat. 

### heartbeat_interval

| type | default | version |
|:----:|:-------:|:-------:|
| time | 1       | 0.14.0  |

The interval of the heartbeat packer.

### phi_failure_detector

| type | default | version |
|:----:|:-------:|:-------:|
| bool | true    | 0.14.0  |

Use the "Phi accrual failure detector" to detect server failure.

### phi_threshold

| type    | default | version |
|:-------:|:-------:|:-------:|
| integer | 16      | 0.14.0  |

The threshold parameter used to detect server faults.

### hard_timeout

| type | default | version |
|:----:|:-------:|:-------:|
| time | 60      | 0.14.0  |

The hard timeout used to detect server failure. The default value is equal to the `send_timeout` parameter.

### expire_dns_cache

| type | default                | version |
|:----:|:----------------------:|:-------:|
| time | nil (persistent cache) | 0.14.0  |

Set TTL to expire DNS cache in seconds. Set 0 not to use DNS Cache.

### dns_round_robin

| type | default | version |
|:----:|:-------:|:-------:|
| bool | false   | 0.14.0  |

Enable client-side DNS round robin. Uniform randomly pick an IP address to send data when a hostname has serveral IP addresses.

NOTE: `heartbeat_type udp` is not available with `dns_round_robin true`. Use `heartbeat_type tcp` or `heartbeat_type none`. 

### tls_version

| type | default | available       | version |
|:----:|:-------:|:---------------:|:-------:|
| enum | TLSv1_2 | TLSv1_1, TLSv1_2| 0.14.12 |

The default version of TLS transport.

### tls_ciphers

| type   | default                                            | version |
|:------:|:--------------------------------------------------:|:-------:|
| string | ALL:!aNULL:!eNULL:!SSLv2 (OpenSSL > 1.0.0 default) | 0.14.12 |

The cipher configuration of TLS transport.

### tls_insecure_mode

| type | default | version |
|:----:|:-------:|:-------:|
| bool | false   | 0.14.12 |

Skip all verification of certificates or not.

### tls_allow_self_signed_cert

| type | default | version |
|:----:|:-------:|:-------:|
| bool | false   | 0.14.12 |

Allow self signed certificates or not.

### tls_verify_hostname

| type | default | version |
|:----:|:-------:|:-------:|
| bool | true    | 0.14.12 |

Verify hostname of servers and certificates or not in TLS transport.

### tls_cert_path

| type            | default | version |
|:---------------:|:-------:|:-------:|
| array of string | false   | 0.14.12 |

The additional CA certificate path for TLS.

### &lt;security&gt; section

| required | multi | version |
|:--------:|:-----:|:-------:|
| false    | false | 0.14.5  |

This section contains parameters related to authentication.

#### self_hostname

| type | default | version |
|:----:|:-------:|:-------:|
| bool | false   | 0.14.5  |

The hostname.

#### shared_key

| type | default | version |
|:----:|:-------:|:-------:|
| bool | false   | 0.14.5  |

Shared key for authentication.

### &lt;secondary&gt;

| required | multi | version |
|:--------:|:-----:|:-------:|
| false    | false | 0.14.0  |

The backup destination that is used when all servers are unavailable.

For more details, see [Secondary Output](output-plugin-overview#secondary-output).

## Troubleshooting

### "no nodes are available"
Please make sure that you can communicate with port 24224 using **not only TCP, but also UDP**. These commands will be useful for checking the network configuration.

    :::term
    $ telnet host 24224
    $ nmap -p 24224 -sU host

Please note that there is one [known issue](http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&cmd=displayKC&externalId=2019944) where VMware will occasionally lose small UDP packets used for heartbeat.
